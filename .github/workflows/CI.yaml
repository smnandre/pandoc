name: "CI"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  cs:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - name: "Git: checkout"
        uses: actions/checkout@v4
      - name: "PHP: setup 8.3"
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: php-cs-fixer
      - name: "Php-CS-Fixer: version"
        run: php-cs-fixer -V
      - name: "Php-CS-Fixer: check"
        run: php-cs-fixer fix --dry-run --diff

  sa:
    name: "Static Analysis"
    runs-on: ubuntu-latest
    steps:
      - name: "Git: checkout"
        uses: actions/checkout@v4
      - name: "PHP: setup ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: phpstan
      - name: "Composer: cache config"
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: "Composer: cache restore"
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: "Composer: install"
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: "PHPStan: version"
        run: phpstan --version
      - name: "PHPStan: analyse"
        run: phpstan analyse src/

  tests:
    name: "Tests (PHP ${{ matrix.php-version }} ${{ matrix.dependencies }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - php-version: '8.3'
            dependencies: 'low'
          - php-version: '8.4'
            dependencies: 'high'
      fail-fast: false
    steps:
      - name: "Git: Checkout"
        uses: actions/checkout@v4
      - name: "PHP: setup ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          ini-values: xdebug.mode=coverage
      - name: "PHP: php matcher"
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
      - name: "Composer: cache config"
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: "Composer: cache restore"
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.php-version }}-${{ matrix.dependencies }}
          restore-keys: ${{ runner.os }}-composer-
      - name: "Composer: validate"
        run: composer validate --strict
      - name: "Composer: install ${{ matrix.dependencies }} deps"
        run: |
          if [ "${{ matrix.dependencies }}" == "low" ]; then
            composer update --prefer-lowest --prefer-dist --no-progress --no-suggest;
          else
            composer install --prefer-dist --no-progress --no-suggest;
          fi
      - name: "Pandoc: setup"
        uses: pandoc/actions/setup@v1
      - name: "Pandoc: version"
        run: pandoc --version
      - name: "PHPUnit: version"
        run: php vendor/bin/phpunit --version
      - name: "PHPUnit: tests"
        run: php vendor/bin/phpunit
      - name: "Codecov: upload coverage"
        uses: codecov/codecov-action@v5
        with:
          files: .phpunit.coverage/coverage.xml
          verbose: true
